name: 混淆当前版本源码
on:
    workflow_dispatch:

jobs:
  obfuscate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 使用 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: 安装依赖
        run: npm install -g javascript-obfuscator

      - name: 重命名文件（临时处理特殊字符）
        run: |
          # 创建简化文件名的软链接
          ln -s "vless无需proxyip的nat64套壳版 (推荐使用).js" "vless-worker.js"
          
      - name: 检查备份文件是否存在
        run: |
          if [ ! -f "vless-worker.js.backup" ]; then
            echo "备份文件不存在，正在创建..."
            cp "vless-worker.js" "vless-worker.js.backup"
          fi
          cp "vless-worker.js.backup" "vless-worker-temp.js"

      - name: 混淆代码
        run: |
          javascript-obfuscator vless-worker-temp.js --output vless-worker.js \
          --compact true \
          --control-flow-flattening true \
          --control-flow-flattening-threshold 1 \
          --dead-code-injection true \
          --dead-code-injection-threshold 1 \
          --identifier-names-generator hexadecimal \
          --rename-globals true \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 1 \
          --transform-object-keys true \
          --unicode-escape-sequence true

      - name: 清理临时文件
        run: |
          rm -f vless-worker-temp.js
          rm -f vless-worker.js  # 删除软链接

      - name: 提交更改
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add "vless无需proxyip的nat64套壳版 (推荐使用).js" "vless-worker.js.backup"
          if git diff --cached --quiet; then
            echo "没有文件更改，跳过提交"
          else
            git commit -m "混淆 vless无需proxyip的nat64套壳版文件并备份原文件"
          fi

      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
